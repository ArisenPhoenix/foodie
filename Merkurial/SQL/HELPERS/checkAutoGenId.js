import ARGS from "../OBJECT_CLASS/postgreArgs"

const {uuid, serial, primaryKey, foreignKey} = ARGS

export const isAutoGeneratedId = (tableSchema) => {
    for (let columnSchema of tableSchema){
        const {column, params} = columnSchema
        if (paramsIncludeAutoGenId(params)){
            return true
        }
      }
    return false
}

export const paramsIncludeAutoGenId = (params) => {
    if (params.indexOf(serial) >= 0){
        return serial
    } else if (params.indexOf(uuid) >= 0){
        return uuid
    }

    return false
}


export const getPrimaryKey = (params) => {
    const primaryKeyIndex = params.indexOf(primaryKey)
    if (primaryKeyIndex >= 0){
        return params[primaryKeyIndex]
    }
    return false
}


export const getForeignKey = (params) => {
    const foreignKeyIndex = params.indexOf(foreignKey)
    if (foreignKeyIndex >= 0){
        return params[foreignKeyIndex]
    }
    return false
}


export const CHECK_IS_UUID = (tableSchema) => {
    for (let schema of tableSchema){
        const {column, params} = schema
        if (params.indexOf(ARGS.uuid) >=0 ){
            return true
        }
      }
}

export const CHECK_IS_SERIAL = (tableSchema) => {
    for (let schema of tableSchema){
        const {column, params} = schema
        if (params.indexOf(ARGS.serial) >= 0){
            return true
        }
    }
}

export const checkIsArray = (params) => {
    for (let i = 0; i < params.length; i++) {
        const param = params[i]
        // console.log("Check is array PARAM: ", param)
        const isArray = param.includes("[]")
        if (isArray){
            // console.log("Check is array NOW TRUE: ", param)
            return true
        }
    }
    return false
}

export const checkIsNumber = (params) => {
    for (let i = 0; i < params.length; i++){
        const data = params[i]
        if (data.includes("TEXT") || data.includes("VARCHAR") || data === '' || data === ""){
            return false
        }
    }
    
    if (params.indexOf(ARGS.uuid) > -1) {
        // console.log("CHECK IS NUMBER PARAMS UUID: ", params)
        return "UUID"
    } else if (params.indexOf(ARGS.int)) {
        // console.log("CHECK IS NUMBER PARAMS INT: ", params)
        return "INT"
    } else if (params.indexOf(ARGS.bigInt)) {
        // console.log("CHECK IS NUMBER PARAMS BIGINT: ", params)
        return "BIGINT"
    } else if (params.indexOf(ARGS.numeric)) {
        // console.log("CHECK IS NUMBER PARAMS NUMERIC: ", params)
        return "NUMERIC"
    } else {
        for (let i = 0; i < params.length; i++){
            const data = params[i]
            if (data.includes("INT") || data.includes("NUMERIC") || data.includes("FLOAT")){
                return true
            }
        }

    }
    return false 
}